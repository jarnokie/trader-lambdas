name: Test and deploy lambdas

on: [push, workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
      - name: test
        run: |
          pytest
        env:
          PG_HOST: ${{ secrets.TEST_PG_HOST }}
          PG_DB: ${{ secrets.TEST_PG_DB }}
          PG_PASSWORD: ${{ secrets.TEST_PG_PASSWORD }}
          PG_USER: ${{ secrets.TEST_PG_USER }}
          ALPACA_KEY: ${{ secrets.ALPACA_KEY }}
          ALPACA_SECRET: ${{ secrets.ALPACA_SECRET }}

  deploy-lambda:
    needs: test
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        lambda_name: ["traderBotOpen", "traderBotClosed", "traderAnalysis"]
        include:
          - lambda_name: "traderBotOpen"
            directory: "./botOpenLambda"
            install_torch: false
          - lambda_name: "traderBotClosed"
            directory: "./botClosedLambda"
            install_torch: false
          - lambda_name: "traderAnalysis"
            directory: "./analysisLambda"
            install_torch: false
            
    uses: ./.github/workflows/deploy_lambda.yml
    with:
        function_name: ${{ matrix.lambda_name }}
        function_dir: ${{ matrix.directory }}
        install_torch: ${{ matrix.install_torch }}
    secrets: inherit

  build-container:
    runs-on: ubuntu-latest
    needs: test
    env:
      ECR_REGISTRY: 680301337036.dkr.ecr.eu-north-1.amazonaws.com/trader
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a
      - name: Build container
        working-directory: ./tradeContainer
        id: build-image
        run: docker build -t trader:${IMAGE_TAG} .
      - name: Build container
        id: push-image
        run: |
          docker tag -trader:${IMAGE_TAG} ${ECR_REGISTRY}:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}:${IMAGE_TAG}
  

    